---
title: "Dynamic documents with Quarto"
author: Alexey Nesterovich
date: 2023-11-29
format: 
  revealjs:
    slide-number: c/t
    chalkboard: true
title-slide-attributes:
  data-background-image: ../figure/reroute.png
  data-background-size: contain
  data-background-opacity: "0.95"
include-in-header:
  - text: |
      <style>
      #title-slide {
        color: #AAFF00;
      }
      #title-slide .title {
        color: #FF6D2D;
      }
      </style>
---

## Quarto

Quarto enables you to [knit](https://yihui.org/knitr/) or weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.


## Key features Quarto {.smaller}

- Dynamic documents
    - Create reproducible documents that can be regenerated when underlying data change; uses R, Python, Julia
- Publications 
    - generate high-quality articles, reports, presentations, websites, and books in HTML, PDF, MS Word, ePub, and more. Use a single source document to target multiple formats.
- Markdown
    - Quarto adds extensions for cross-references, figure panels, advanced page layout
- Websites and Books
    - Create books and manuscripts in both print formats (PDF and MS Word) and online formats (HTML and ePub).
    
## What we are going to do

1. Slides with revealjs
2. Academic papers
3. HTML book and deploy to GitHub


## These are [revealjs](https://quarto.org/docs/presentations/revealjs/) slides {.smaller}

Quarto can also format your slides to 

- [pptx -- PowerPoint (MS Office)](https://quarto.org/docs/presentations/powerpoint.html)
    - PowerPoint presentations support features like incremental bullets, 2-column layouts, and speaker notes, and can also be rendered using custom PowerPoint templates.

- [beamer -- Beamer (LaTeX/PDF)](https://quarto.org/docs/presentations/beamer.html)
    - incremental content and 2-column layouts, and also provide facilities for customizing column layout, specifying frame attributes, and using Beamer themes.

:::{.callout-note}
All these formats have slightly different sets of features.
:::


## Creating and customizing your revealjs presentation

- [Creating slides](https://quarto.org/docs/presentations/revealjs/)
- [Customizing slides](https://quarto.org/docs/presentations/revealjs/advanced.html)


## Some elements are much easier to change than others

It's easy to add graphics to e.g. title slide background:

```{.yaml}
title-slide-attributes:
  data-background-image: figure/reroute.png
  data-background-size: contain
  data-background-opacity: "0.8"
```

Not so easy to adjust title side font color...

```{.yaml}
include-in-header:
  - text: |
      <style>
      #title-slide {
        color: #AAFF00;
      }
      #title-slide .title {
        color: #FF6D2D;
      }
      </style>
```


:::footer
Source: [https://github.com/quarto-dev/quarto-cli/discussions/5687](https://github.com/quarto-dev/quarto-cli/discussions/5687)
:::


## Presenting and distributing your slides

- PDF export of HTML slides.
- Annotating slides with chalkboard.

```{.yaml}
chalkboard: true
```


## Writing academic papers

- Authoring manuscripts with [Quarto journal templates](https://quarto.org/docs/journals/).
- Inserting citations from Zotero or from a DOI with the RStudio Visual Editor.


## Creating a new article

Let's create a new [PLOS article](https://github.com/quarto-journals/plos), run in your terminal:


```{.bash}
quarto use template quarto-journals/plos
```


## Deploy your site to GitHub {auto-animate=true}

GitHub Pages is a website hosting service that enables you to publish content based on source code managed within a GitHub repository.

1. Render sites on your local machine to the docs directory, check the rendered site into GitHub, and then configure your GitHub repo to publish from the docs directory.    

2. Use the quarto publish command to publish content rendered on your local machine.

::: {}
3. Use a GitHub Action to automatically render your files (a single Quarto document or a Quarto project) and publish the resulting content whenever you push a source code change to your repository. 
:::


## Deploy your site to GitHub {auto-animate=true}

::: {style="color: brown;"}
3. Use a GitHub Action to automatically render your files (a single Quarto document or a Quarto project) and publish the resulting content whenever you push a source code change to your repository.
:::

